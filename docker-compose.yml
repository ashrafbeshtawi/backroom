version: '3.1'

services:
  symfony:
    container_name: symfony
    build:
      context: ./symfony
      dockerfile: Dockerfile
    restart: always
    depends_on: [postgres]
    ports:
      - "8080:80"
    volumes:
      - ./symfony:/var/www/html/
    networks:
      - backroom-nt

  postgres:
    container_name: postgres
    image: postgres:alpine3.17
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    ports:
      - "1010:5432"
    networks:
      - backroom-nt

  nuxtjs:
    container_name: nuxtjs
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    environment:
      - NUXT_HOST=${FRONTEND_HOST}
      - NUXT_PORT=${FRONTEND_PORT}
    ports:
      [ "3000:3000" ]
    volumes:
        [ ./frontend:/frontend/ ]
    networks:
      - backroom-nt

  flyway:
    container_name: flyway
    image: flyway/flyway
    command: -url=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME} -schemas=public -user=${DATABASE_USER} -password=${DATABASE_PASSWORD} migrate
    volumes:
      - ./flyway/sql:/flyway/sql
    depends_on: [postgres]
    networks:
      - backroom-nt

  adminer:
    image: adminer
    restart: always

    networks:
      - backroom-nt
    ports:
      - "5050:8080"

networks:
  backroom-nt:
    driver: bridge


