version: '3.1'

services:
  symfony:
    container_name: symfony
    build:
      context: ./symfony
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MAILER_DSN: ${MAILER_DSN}
      HASH_KEY: ${HASH_KEY}
    restart: always
    depends_on: [postgres]
    ports:
      - "8080:80"
    volumes:
      - ./symfony/public:/var/www/html/
      - ./symfony:/var/www/
    networks:
      - backroom-nt

  postgres:
    container_name: postgres
    image: postgres:alpine3.17
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    ports:
      - "1010:5432"
    networks:
      - backroom-nt

  nuxtjs:
    container_name: nuxtjs
    build:
      context: ./nuxtjs
      dockerfile: Dockerfile
    restart: always
    environment:
      - NUXT_HOST=${FRONTEND_HOST}
      - NUXT_PORT=${FRONTEND_PORT}
    ports:
      [ "3000:3000" ]
    volumes:
        [ ./nuxtjs:/nuxtjs/ ]
    networks:
      - backroom-nt

  flyway:
    container_name: flyway
    image: flyway/flyway
    environment:
        FLYWAY_URL: ${FLYWAY_URL}
        FLYWAY_USER: ${DATABASE_USER}
        FLYWAY_PASSWORD: ${DATABASE_PASSWORD}
        FLYWAY_SCHEMAS: ${FLYWAY_SCHEMAS}
        FLYWAY_LOCATIONS: ${FLYWAY_LOCATIONS}
    command: ['baseline', 'migrate', 'info']
    volumes:
      - ./flyway/sql:/flyway/sql
      - ./flyway/conf:/flyway/conf
    depends_on: [postgres]
    networks:
      - backroom-nt

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    networks:
      - backroom-nt
    ports:
      - "5050:8080"

  mailcatcher:
    container_name: mailcatcher
    image: dockage/mailcatcher
    restart: on-failure
    networks:
      - backroom-nt
    ports:
      - "1080:1080"
      - "1025:1025"
networks:
  backroom-nt:
    driver: bridge


