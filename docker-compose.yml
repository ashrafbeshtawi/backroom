version: '3.1'

services:
  symfony:
    container_name: symfony
    build:
      context: ./symfony
      dockerfile: Dockerfile
    restart: always
    depends_on: [postgres]
    ports:
      - "8080:80"
    volumes:
      - ./symfony:/var/www/html/
    networks:
      - backroom-nt
  postgres:
    container_name: postgres
    image: postgres:alpine3.17
    restart: always
    ports:
      [ "1010:5432" ]
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PORT: ${DATABASE_PORT}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
        [ ./pqsql:/var/www/pqsql/ ]
    networks:
      - backroom-nt
  nuxtjs:
    container_name: nuxtjs
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    environment:
      - NUXT_HOST=${FRONTEND_HOST}
      - NUXT_PORT=${FRONTEND_PORT}
    ports:
      [ "3000:3000" ]
    volumes:
        [ ./frontend:/frontend/ ]
    networks:
      - backroom-nt
  liquibase:
   container_name: liquibase
   image: liquibase/liquibase:4.19
   environment:
    LIQUIBASE_COMMAND_URL: ${LIQUIBASE_URL}
    LIQUIBASE_COMMAND_USERNAME: ${DATABASE_USER}
    LIQUIBASE_COMMAND_PASSWORD: ${DATABASE_PASSWORD}
    LIQUIBASE_COMMAND_CHANGELOG_FILE: changeLog.xml
   volumes:
    - ./liquibase/changeLog/:/liquibase/changelog/
   command: --defaults-file=/liquibase/changelog/liquibase.properties update
   depends_on: [postgres]
  flyway:
    image: flyway/flyway
    command: -url=jdbc:postgresql://postgresql:5432/app -schemas=public -user=admin -password=password -connectRetries=60 migrate
    volumes:
      - .:/flyway/sql
    depends_on:
      - postgres
networks:
  backroom-nt:
    driver: bridge


